<?xml version="1.0" encoding="UTF-8" ?>
<!-- This file was written by IceGrid GUI -->
<icegrid>
   <application name="IcegauntletApp">
      <distrib icepatch="${application}.IcePatch2/server"/>
      <service-template id="IceStorm">
         <parameter name="instance-name" default="${application}.IceStorm"/>
         <parameter name="topic-manager-endpoints" default="default"/>
         <parameter name="publish-endpoints" default="default"/>
         <parameter name="flush-timeout" default="1000"/>
         <service name="${instance-name}" entry="IceStormService,37:createIceStorm">
            <properties>
               <property name="${service}.LMDB.Path" value="${service.data}"/>
               <property name="${service}.InstanceName" value="${instance-name}"/>
               <property name="${service}.Flush.Timeout" value="${flush-timeout}"/>
            </properties>
            <adapter name="${service}.Publish" endpoints="${publish-endpoints}" id="${instance-name}.Publish"/>
            <adapter name="${service}.TopicManager" endpoints="${topic-manager-endpoints}" id="${instance-name}.TopicManager">
               <object identity="${instance-name}/TopicManager" type="::IceStorm::TopicManager"/>
            </adapter>
         </service>
      </service-template>
      <service-template id="IceStorm-HA">
         <parameter name="instance-name" default="${application}.IceStorm"/>
         <parameter name="node-id"/>
         <parameter name="topic-manager-endpoints" default="default"/>
         <parameter name="publish-endpoints" default="default"/>
         <parameter name="node-endpoints" default="default"/>
         <parameter name="flush-timeout" default="1000"/>
         <parameter name="publish-replica-group"/>
         <parameter name="topic-manager-replica-group"/>
         <service name="${instance-name}${node-id}" entry="IceStormService,37:createIceStorm">
            <properties>
               <property name="${service}.LMDB.Path" value="${service.data}"/>
               <property name="${service}.InstanceName" value="${instance-name}"/>
               <property name="${service}.NodeId" value="${node-id}"/>
               <property name="${service}.Flush.Timeout" value="${flush-timeout}"/>
            </properties>
            <adapter name="${service}.Node" endpoints="${node-endpoints}" id="${instance-name}${node-id}.Node"/>
            <adapter name="${service}.Publish" endpoints="${publish-endpoints}" id="${instance-name}${node-id}.Publish" replica-group="${publish-replica-group}"/>
            <adapter name="${service}.TopicManager" endpoints="${topic-manager-endpoints}" id="${instance-name}${node-id}.TopicManager" replica-group="${topic-manager-replica-group}"/>
         </service>
      </service-template>
      <server-template id="Glacier2">
         <parameter name="instance-name" default="${application}.Glacier2"/>
         <parameter name="client-endpoints"/>
         <parameter name="server-endpoints" default=""/>
         <parameter name="session-timeout" default="0"/>
         <server id="${instance-name}" activation="always" exe="glacier2router">
            <properties>
               <property name="Glacier2.Client.Endpoints" value="${client-endpoints}"/>
               <property name="Glacier2.Server.Endpoints" value="${server-endpoints}"/>
               <property name="Glacier2.InstanceName" value="${instance-name}"/>
               <property name="Glacier2.SessionTimeout" value="${session-timeout}"/>
            </properties>
         </server>
      </server-template>
      <server-template id="IceGauntletAuthTemplate">
         <server id="AuthServer" activation="manual" exe="./auth_server" pwd="${application_distrib}">
            <properties>
               <property name="Identity" value="default"/>
               <property name="Ice.StdOut" value="${application.distrib}/auth_server-out.txt"/>
               <property name="Ice.ProgramName" value="${server}.Auth"/>
               <property name="Ice.StdErr" value="${application.distrib}/auth_server-err.txt"/>
            </properties>
         </server>
      </server-template>
      <server-template id="IcePatch2">
         <parameter name="instance-name" default="${application}.IcePatch2"/>
         <parameter name="endpoints" default="default"/>
         <parameter name="directory"/>
         <server id="${instance-name}" activation="on-demand" application-distrib="false" exe="icepatch2server">
            <properties>
               <property name="IcePatch2.InstanceName" value="${instance-name}"/>
               <property name="IcePatch2.Directory" value="${directory}"/>
            </properties>
            <adapter name="IcePatch2" endpoints="${endpoints}" id="${server}.IcePatch2">
               <object identity="${instance-name}/server" type="::IcePatch2::FileServer"/>
            </adapter>
         </server>
      </server-template>
      <server-template id="IceStorm">
         <parameter name="instance-name" default="${application}.IceStorm"/>
         <parameter name="topic-manager-endpoints" default="default"/>
         <parameter name="publish-endpoints" default="default"/>
         <parameter name="flush-timeout" default="1000"/>
         <icebox id="${instance-name}" activation="on-demand" exe="icebox">
            <service-instance template="IceStorm" instance-name="${instance-name}" topic-manager-endpoints="${topic-manager-endpoints}" publish-endpoints="${publish-endpoints}" flush-timeout="${flush-timeout}"/>
         </icebox>
      </server-template>
      <server-template id="IceStorm-HA">
         <parameter name="instance-name" default="${application}.IceStorm"/>
         <parameter name="node-id"/>
         <parameter name="topic-manager-endpoints" default="default"/>
         <parameter name="publish-endpoints" default="default"/>
         <parameter name="node-endpoints" default="default"/>
         <parameter name="flush-timeout" default="1000"/>
         <parameter name="publish-replica-group"/>
         <parameter name="topic-manager-replica-group"/>
         <icebox id="${instance-name}${node-id}" activation="on-demand" exe="icebox">
            <service-instance template="IceStorm-HA" instance-name="${instance-name}" node-id="${node-id}" topic-manager-endpoints="${topic-manager-endpoints}" publish-endpoints="${publish-endpoints}" node-endpoints="${node-endpoints}" flush-timeout="${flush-timeout}" publish-replica-group="${publish-replica-group}" topic-manager-replica-group="${topic-manager-replica-group}"/>
         </icebox>
      </server-template>
      <server-template id="RoomManagerTemplate">
         <parameter name="index"/>
         <server id="RoomManagerTemplate${index}" activation="manual" exe="./Servidor.py" pwd="${application.distrib}">
            <properties>
               <property name="Ice.StdOut" value="${application.distrib}/room${index}-out.txt"/>
               <property name="Ice.ProgramName" value="${server}.RoomManager${index}"/>
               <property name="Ice.StdErr" value="${application.distrib}/room${index}-err.txt"/>
               <property name="AuthProxy" value="default -t -e 1.1 @ AuthServer.AuthenticationAdapter"/>
            </properties>
         </server>
      </server-template>
      <node name="node1">
         <server id="AuthServer" activation="manual" exe="./auth_server" pwd="${application.distrib}/icegauntlet_auth_server/">
            <properties>
            </properties>
            <adapter name="AuthenticationAdapter" endpoints="tcp" id="${server}.AuthenticationAdapter"/>
         </server>
         <server id="RoomManager" activation="manual" exe="./Servidor.py" pwd="${application.distrib}">
            <option>default -t -e 1.1:tcp -h 10.0.2.15 -p 9099 -t 60000</option>
            <properties>
               <property name="Ice.StdOut" value="${application.distrib}/server-out.txt"/>
               <property name="IceStorm.TopicManager.Proxy" value="IceStorm/TopicManager:tcp -p 10000"/>
               <property name="RoomManagerAdapter.AdapterId" value="RoomManagerAdapter"/>
               <property name="RoomManagerAdapter.Locator" value="IceGrid/Locator -t:tcp -h 127.0.0.1 -p 9091"/>
            </properties>
            <adapter name="RoomManagerAdapter" endpoints="tcp" id="${server}.RoomManagerAdapter"/>
         </server>
      </node>
      <node name="node2">
         <server id="RoomManager2" activation="manual" exe="./Servidor.py" pwd="${application.distrib}">
            <option>default -t -e 1.1:tcp -h 10.0.2.15 9099 -t 60000</option>
            <properties>
               <property name="Ice.StdOut" value="${application.distrib}/server-out2.txt"/>
               <property name="IceStorm.TopicManager.Proxy" value="IceStorm/TopicManager:tcp -p 100000"/>
               <property name="RoomManagerAdapter2.AdapterId" value="RoomManagerAdapter2"/>
               <property name="RoomManagerAdapter2.Locator" value="IceGrid/Locator -t:tcp -h 127.0.0.1 -p 9091"/>
            </properties>
            <adapter name="RoomManagerAdapter2" endpoints="tcp" id="${server}.RoomManagerAdapter2"/>
         </server>
         <server id="RoomManager3" activation="manual" exe="./Servidor.py" pwd="${application.distrib}">
            <option>default -t -e 1.1:tcp -h 10.0.2.15 9099 -t 60000</option>
            <properties>
               <property name="Ice.StdOut" value="${application.distrib}/server3-out.txt"/>
               <property name="IceStorm.TopicManager.Proxy" value="IceStorm/TopicManager:tcp -p 100000"/>
               <property name="RoomManagerAdapter3.AdapterId" value="RoomManagerAdapter3"/>
               <property name="RoomManagerAdapter3.Locator" value="IceGrid/Locator -t:tcp -h 127.0.0.1 -p 9091"/>
            </properties>
            <adapter name="RoomManagerAdapter3" endpoints="tcp" id="${server}.RoomManagerAdapter3"/>
         </server>
      </node>
   </application>
</icegrid>
